<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!-- 引入配置文件 mybatis-generator:generate-->
    <properties resource="generator/generator.properties"/>

    <!--classPathEntry:数据库的JDBC驱动,直接在plugin中引入依赖 -->

    <context id="DB2Tables" targetRuntime="MyBatis3">
        <!-- 自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；
        一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖 -->
        <property name="autoDelimitKeywords" value="true"/>
        <!-- 生成的Java文件的编码 -->
        <property name="javaFileEncoding" value="utf-8"/>
        <!-- beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，比如ORACLE就是双引号，MYSQL默认是`反引号； -->
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>

        <!-- 格式化java代码 -->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
        <!-- 格式化XML代码 -->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>

        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>

        <!--        &lt;!&ndash; include the plugin &ndash;&gt;-->
        <!--        <plugin type="com.softwareloop.mybatis.generator.plugins.LombokPlugin">-->
        <!--            &lt;!&ndash; enable annotations &ndash;&gt;-->
        <!--            <property name="builder" value="false"/>-->
        <!--            &lt;!&ndash; annotation's option(boolean) &ndash;&gt;-->
        <!--            <property name="builder.fluent" value="false"/>-->
        <!--            &lt;!&ndash; annotation's option(String) &ndash;&gt;-->
        <!--            <property name="builder.builderMethodName" value="myBuilder"/>-->

        <!--            <property name="accessors" value="true"/>-->
        <!--            &lt;!&ndash; annotation's option(array of String) &ndash;&gt;-->
        <!--            <property name="accessors.prefix" value="m_, _"/>-->

        <!--            &lt;!&ndash; disable annotations &ndash;&gt;-->
        <!--            <property name="allArgsConstructor" value="false"/>-->
        <!--        </plugin>-->

        <!-- 注释 -->
        <commentGenerator>
            <property name="suppressAllComments" value="true"/><!-- 是否取消注释 -->
            <property name="suppressDate" value="true"/> <!-- 是否生成注释代时间戳-->
        </commentGenerator>

        <!-- jdbc连接 -->
        <jdbcConnection driverClass="${jdbc.driver}" connectionURL="${jdbc.url}" userId="${jdbc.user}"
                        password="${jdbc.password}"/>
        <!-- 类型转换 -->
        <javaTypeResolver>
            <!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） -->
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- 生成实体类地址-->
        <javaModelGenerator targetPackage="${package.model}" targetProject="${path.java}">
            <property name="enableSubPackages" value="false"/>
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>
        <!-- 生成mapxml文件 -->
        <sqlMapGenerator targetPackage="${package.xml}" targetProject="${path.resource}">
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>
        <!-- 生成mapxml对应client，也就是接口dao -->
        <javaClientGenerator targetPackage="${package.mapper}" targetProject="${path.java}" type="XMLMAPPER">
            <property name="enableSubPackages" value="false"/>
        </javaClientGenerator>
        <!--生成全部表-->
        <!--    <table tableName="%" />-->

        <!-- table可以有多个,每个数据库中的表都可以写一个table，tableName表示要匹配的数据库表,也可以在tableName属性中通过使用%通配符来匹配所有数据库表,只有匹配的表才会自动生成文件 -->
        <table tableName="t_gray_rule" domainObjectName="GrayRule"
               enableCountByExample="false"
               enableSelectByPrimaryKey="true"
               enableUpdateByPrimaryKey="true"
               enableDeleteByPrimaryKey="true"
               enableUpdateByExample="false"
               enableDeleteByExample="false"
               enableSelectByExample="false"
               selectByExampleQueryId="false">
<!--            <property name="useActualColumnNames" value="true"/>-->
            <!-- 数据库表主键 -->
            <!--<generatedKey column="id" sqlStatement="Mysql" identity="true" />-->
        </table>


    </context>
</generatorConfiguration>
